{
    "collab_server" : "",
    "contents" : "---\ntitle: \"Evaluating ORES Models\"\nauthor: \"Avner Kantor\"\ndate: \"3.4.2016\"\noutput: html_document\n---\n\n**The Objective Revision Evaluation Service (ORES)** is a web service running in Wikimedia Labs that provides machine learning as a service for Wikimedia Projects. (<https://ores.wmflabs.org/>). You can read more [here](http://socio-technologist.blogspot.co.il/2015/10/ores-hacking-social-structures-by.html>).\n\nThe damage model was trained on human judgement to predict damaging edits. Remember that not all damaging edits are bad-faith.(<https://meta.wikimedia.org/wiki/ORES/damaging>) \n\nWe explored the bias that ORES' damage detection models have against anonymous editors in Wikipedia. We did a statistical analysis to show that the bias is extreme and then changed our modeling strategy to minimize the bias re-measured the effects.\n\nThanks Aaron for the supervision!\n\n### V2 Model - Damaging\nExample: https://ores.wmflabs.org/v2/scores/enwiki/damaging/623818349/\n\n```{r, eval=FALSE}\n# Download revs_id\nlibrary(jsonlite)\n\ndocument <- fromJSON(\"http://labels.wmflabs.org/campaigns/enwiki/4/?tasks\")\n\n# Find revs_is.labels.damaging\nrevs_id<- document$tasks$data$rev_id\ndamagings<- sapply(1:20000, function(x) document$tasks$labels[[x]]$data$damaging)\n\n# Find damaging predictions\ndf<-as.data.frame(cbind(revs_id, damagings))\ndfFalse<-select(filter(df, damagings!=\"TRUE\"), revs_id)\ndfTrue<-select(filter(df, damagings==\"TRUE\"), revs_id)\n\n# Get Damaging Probabilities\ngetStats <- function(id) {\n  rdTrue <- fromJSON(paste0(\"https://ores.wmflabs.org/v2/scores/enwiki/damaging/\", id, \"/?feature.is_anon=true\"))\n  rdFalse<-fromJSON(paste0(\"https://ores.wmflabs.org/v2/scores/enwiki/damaging/\", id, \"/?feature.is_anon=false\"))\n  \n  rdTruePredictionTrue<-rdTrue$scores$enwiki$damaging$scores[[1]]$probability$true\n  rdTruePredictionFalse<-rdFalse$scores$enwiki$damaging$scores[[1]]$probability$true\n  \n  return(list(rdTruePredictionTrue, rdTruePredictionFalse))\n}\n\n# Test  Model - Prediction is False\nanonFalseModel<-sapply(1:500, function(x) getStats(dfFalse[x,]))\n```\n\n```{r, echo=FALSE}\nload(\"anonFalseModel.rda\")\n```\n\n```{r, echo=TRUE, message=FALSE, warning=FALSE}\n### Manipulating\nlibrary(dplyr)\nlibrary(reshape2)\n\nanonFalseModelDF<-t(anonFalseModel)\ncolnames(anonFalseModelDF)<-c(\"anon_true\", \"anon_false\")\nanonFalseModelDF<-as.data.frame(anonFalseModelDF)\nanonFalseModelDFManipulated<-melt(lapply(anonFalseModelDF, unlist))\n\n### PlotFalse\nlibrary(ggplot2)\n\nggplot(anonFalseModelDFManipulated, aes(x=value)) + \n  geom_density(aes(group=L1, colour=L1, fill=L1), alpha=0.3) +\n  labs(title=\"ORES damaging prediction is false\", x=\"N=500\") + \n  geom_vline(xintercept = c(0.8, 0.87, 0.94),  colour=\"green\", linetype = \"longdash\")\n\n###Calculate the difference\nanonFalseModelDF$difference<-as.numeric(as.character(anonFalseModelDF$anon_true))-as.numeric(as.character(anonFalseModelDF$anon_false))\nanonFalseModelDF<-anonFalseModelDF[, c(\"anon_true\", \"anon_false\", \"difference\")]\nanonFalseModelDFManipulated2<-melt(lapply(anonFalseModelDF, unlist))\n\n### PlotTrue2\nggplot(anonFalseModelDFManipulated2, aes(x=value)) + \n  geom_density(aes(group=L1, colour=L1, fill=L1), alpha=0.3) +\n  labs(title=\"ORES damaging prediction is false+difference\", x=\"N=500\") + \n  geom_vline(xintercept = c(0.8, 0.87, 0.94),  colour=\"green\", linetype = \"longdash\")\n```\n\nNow, let's calculate the true probabilities in the same way.\n\n```{r, echo=FALSE}\nload(\"anonTrueModel.rda\")\n```\n\n```{r, echo=FALSE, message=FALSE, warning=FALSE}\n### Manipulating\nanonTrueModelDF<-t(anonTrueModel)\ncolnames(anonTrueModelDF)<-c(\"anon_true\", \"anon_false\")\nanonTrueModelDF<-as.data.frame(anonTrueModelDF)\nanonTrueModelDFManipulated<-melt(lapply(anonTrueModelDF, unlist))\n\n### PlotTrue\nggplot(anonTrueModelDFManipulated, aes(x=value)) + \n  geom_density(aes(group=L1, colour=L1, fill=L1), alpha=0.3) +\n  labs(title=\"ORES damaging prediction is true\", x=\"N=500\") + \n  geom_vline(xintercept = c(0.8, 0.87, 0.94),  colour=\"green\", linetype = \"longdash\")\n\n###Calculate the difference\nanonTrueModelDF$difference<-as.numeric(as.character(anonTrueModelDF$anon_true))-as.numeric(as.character(anonTrueModelDF$anon_false))\nanonTrueModelDF<-anonTrueModelDF[, c(\"anon_true\", \"anon_false\", \"difference\")]\nanonTrueModelDFManipulated2<-melt(lapply(anonTrueModelDF, unlist))\n\n### PlotTrue2\nggplot(anonTrueModelDFManipulated2, aes(x=value)) + \n  geom_density(aes(group=L1, colour=L1, fill=L1), alpha=0.3) +\n  labs(title=\"ORES damaging prediction is true+difference\", x=\"N=500\") + \n  geom_vline(xintercept = c(0.8, 0.87, 0.94),  colour=\"green\", linetype = \"longdash\")\n\n```\n\n### The New Model - Damaging\nExample: https://ores-newmodels.wmflabs.org/v2/scores/enwiki/damaging/623818349/\n```{r, echo=FALSE}\nload(\"anonFalseNewModel.rda\")\nload(\"anonTrueNewModel.rda\")\n```\n\n```{r, echo=FALSE, message=FALSE, warning=FALSE}\n### Manipulating\nanonFalseNewModelDF<-t(anonFalseNewModel)\ncolnames(anonFalseNewModelDF)<-c(\"anon_true\", \"anon_false\")\nanonFalseNewModelDF<-as.data.frame(anonFalseNewModelDF)\nanonFalseNewModelDFManipulated<-melt(lapply(anonFalseNewModelDF, unlist))\n\n### PlotFalse\nggplot(anonFalseNewModelDFManipulated, aes(x=value)) + \n  geom_density(aes(group=L1, colour=L1, fill=L1), alpha=0.3) +\n  labs(title=\"ORES damaging prediction is false\", x=\"N=500\") + \n  geom_vline(xintercept = c(0.8, 0.87, 0.94),  colour=\"green\", linetype = \"longdash\")\n\n### Manipulating\nanonFalseNewModelDF$difference<-as.numeric(as.character(anonFalseNewModelDF$anon_true))-as.numeric(as.character(anonFalseNewModelDF$anon_false))\nanonFalseNewModelDF<-anonFalseNewModelDF[, c(\"anon_true\", \"anon_false\", \"difference\")]\nanonTrueNewModelDFManipulated2<-melt(lapply(anonFalseNewModelDF, unlist))\n\n### PlotFalse2\nggplot(anonTrueNewModelDFManipulated2, aes(x=value)) + \n  geom_density(aes(group=L1, colour=L1, fill=L1), alpha=0.3) +\n  labs(title=\"ORES damaging prediction is false+difference\", x=\"N=500\") + \n  geom_vline(xintercept = c(0.8, 0.87, 0.94),  colour=\"green\", linetype = \"longdash\")\n\n### Manipulating\nanonTrueNewModelDF<-t(anonTrueNewModel)\ncolnames(anonTrueNewModelDF)<-c(\"anon_true\", \"anon_false\")\nanonTrueNewModelDF<-as.data.frame(anonTrueNewModelDF)\nanonTrueNewModelDFManipulated<-melt(lapply(anonTrueNewModelDF, unlist))\n\n### PlotTrue\nggplot(anonTrueNewModelDFManipulated, aes(x=value)) + \n  geom_density(aes(group=L1, colour=L1, fill=L1), alpha=0.3) +\n  labs(title=\"ORES damaging prediction is true\", x=\"N=500\") + \n  geom_vline(xintercept = c(0.8, 0.87, 0.94),  colour=\"green\", linetype = \"longdash\")\n\n###Calculate the difference\nanonTrueNewModelDF$difference<-as.numeric(as.character(anonTrueNewModelDF$anon_true))-as.numeric(as.character(anonTrueNewModelDF$anon_false))\nanonTrueNewModelDF<-anonTrueNewModelDF[, c(\"anon_true\", \"anon_false\", \"difference\")]\nanonTrueNewModelDFManipulated2<-melt(lapply(anonTrueNewModelDF, unlist))\n\n### PlotTrue2\nggplot(anonTrueNewModelDFManipulated2, aes(x=value)) + \n  geom_density(aes(group=L1, colour=L1, fill=L1), alpha=0.3) +\n  labs(title=\"ORES damaging prediction is true+difference\", x=\"N=500\") + \n  geom_vline(xintercept = c(0.8, 0.87, 0.94),  colour=\"green\", linetype = \"longdash\")\n\n```\n",
    "created" : 1459760536852.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2636150298",
    "id" : "D7E8A588",
    "lastKnownWriteTime" : 1459710801,
    "last_content_update" : 1459710801,
    "path" : "~/ores/oresV2Model.Rmd",
    "project_path" : "oresV2Model.Rmd",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_markdown"
}