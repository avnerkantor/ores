library(jsonlite)
library(dplyr)
library(reshape2)
library(ggplot2)
document <- fromJSON("http://labels.wmflabs.org/campaigns/enwiki/4/?tasks")
revs_id<- document$tasks$data$rev_id
damagings<- sapply(1:20000, function(x) document$tasks$labels[[x]]$data$damaging)
df<-as.data.frame(cbind(revs_id, damagings))
dfFalse<-select(filter(df, damagings!="TRUE"), revs_id)
dfTrue<-select(filter(df, damagings=="TRUE"), revs_id)
getStats <- function(id) {
urlTrue = paste0("https://ores-newmodels.wmflabs.org/v2/scores/enwiki/damaging/", id, "/?feature.is_anon=true")
urlFalse = paste0("https://ores-newmodels.wmflabs.org/v2/scores/enwiki/damaging/", id, "/?feature.is_anon=false")
rdTrue <- fromJSON(urlTrue)
rdFalse<-fromJSON(urlFalse)
rdTruePredictionTrue<-rdTrue$scores$enwiki$damaging$scores[[1]]$probability$true
rdTruePredictionFalse<-rdFalse$scores$enwiki$damaging$scores[[1]]$probability$true
return(list(rdTruePredictionTrue, rdTruePredictionFalse))
}
anonFalse-newmodels<-sapply(1:500, function(x) getStats(dfFalse[x,]))
anonFalse<-sapply(1:5, function(x) getStats(dfFalse[x,]))
anonFalseNewModel<-sapply(1:5, function(x) getStats(dfFalse[x,]))
anonFalseNewModel<-sapply(1:500, function(x) getStats(dfFalse[x,]))
anonFalseNewModelDF<-t(anonFalseNewModel)
colnames(anonFalseNewModelDF)<-c("anon_true", "anon_false")
anonFalseNewModelDF<-as.data.frame(anonFalseNewModelDF)
dfs<-melt(lapply(anonFalseNewModelDF, unlist))
ggplot(dfs, aes(x=value)) +
geom_density(aes(group=L1, colour=L1, fill=L1), alpha=0.3) +
labs(title="ORES damaging prediction is false", x="N=500") +
geom_vline(xintercept = c(0.8, 0.87, 0.94),  colour="green", linetype = "longdash")
anonTrueNewModel<-sapply(1:500, function(x) getStats(dfTrue[x,]))
anonTrueNewModel<-sapply(1:500, function(x) getStats(dfTrue[x,]))
rownames(anonTrueNewModelDF)<-c("anon_true", "anon_false")
dfs<-melt(
lapply(
as.data.frame(t(anonTrueNewModelDF)),
unlist)
)
rownames(anonTrueNewModel)<-c("anon_true", "anon_false")
dfs<-melt(
lapply(
as.data.frame(t(anonTrueNewModel)),
unlist)
)
ggplot(dfs, aes(x=value)) +
geom_density(aes(group=L1, colour=L1, fill=L1), alpha=0.3) +
labs(title="ORES damaging prediction is true", x="N=500")
ggplot + geom_vline(xintercept = c(0.8, 0.87, 0.94),  colour="green", linetype = "longdash")
ggplot(dfs, aes(x=value)) +
geom_density(aes(group=L1, colour=L1, fill=L1), alpha=0.3) +
labs(title="ORES damaging prediction is true", x="N=500") +
geom_vline(xintercept = c(0.8, 0.87, 0.94),  colour="green", linetype = "longdash")
anonTrueNewModel$difference<-as.numeric(as.character(anonTrueNewModel$anon_true))-as.numeric(as.character(anonTrueNewModel$anon_false))
anonTrueNewModelDF<-as.data.frame(t(anonTrueNewModel))
View(anonTrueNewModelDF)
anonTrueNewModelDF<-t(anonTrueNewModel)
View(anonTrueNewModelDF)
library(reshae2)
library(reshape2)
anonTrueNewModelDF<-as.data.frame(anonTrueNewModel)
View(dfs)
anonFalseNewModelDF<-as.data.frame(t(anonFalseNewModel)
anonFalseNewModelDF<-as.data.frame(t(anonFalseNewModel))
rownames(anonFalseNewModelDF)<-c("anon_true", "anon_false")
anonFalseNewModelDF<-t(anonFalseNewModel)
rownames(anonFalseNewModelDF)<-c("anon_true", "anon_false")
colnames(anonFalseNewModelDF)<-c("anon_true", "anon_false")
anonFalseNewModelDF<-as.data.frame(anonFalseNewModelDF)
anonFalseNewModelDF<-melt(lapply(anonFalseNewModelDF, unlist))
ggplot(anonFalseNewModelDF, aes(x=value)) +
geom_density(aes(group=L1, colour=L1, fill=L1), alpha=0.3) +
labs(title="ORES damaging prediction is false", x="N=500") +
geom_vline(xintercept = c(0.8, 0.87, 0.94),  colour="green", linetype = "longdash")
anonFalseNewModelDF<-t(anonFalseNewModel)
colnames(anonFalseNewModelDF)<-c("anon_true", "anon_false")
anonFalseNewModelDF<-as.data.frame(anonFalseNewModelDF)
anonFalseNewModelDFManipulate<-melt(lapply(anonFalseNewModelDF, unlist))
View(anonFalseNewModelDF)
anonTrueNewModelDF<-t(anonTrueNewModel)
colnames(anonTrueNewModelDF)<-c("anon_true", "anon_false")
View(anonTrueNewModelDF)
anonTrueNewModelDF<-t(anonTrueNewModel)
anonTrueNewModelDF<-as.data.frame(anonTrueNewModelDF)
View(anonTrueNewModelDF)
anonTrueNewModelDF<-t(anonTrueNewModelDF)
View(anonTrueNewModelDF)
View(anonFalseNewModel)
View(anonFalseNewModel)
anonFalseNewModel<-t(anonFalseNewModel)
View(anonFalseNewModel)
View(dfs)
View(dfs)
View(anonTrueNewModelDF)
anonTrueNewModel<-sapply(1:500, function(x) getStats(dfTrue[x,]))
View(anonTrueNewModel)
save(anonTrueNewModel, file="anonTrueNewModel.rda")
anonTrueNewModelDF<-t(anonTrueNewModel)
colnames(anonTrueNewModelDF)<-c("anon_true", "anon_false")
anonTrueNewModelDF<-as.data.frame(anonTrueNewModelDF)
anonTrueNewModelDF$difference<-as.numeric(as.character(anonTrueNewModelDF$anon_true))-as.numeric(as.character(anonTrueNewModelDF$anon_false))
anonTrueNewModelDF<-anonTrueNewModelDF[, c("anon_true", "anon_false", "difference")]
View(anonTrueNewModelDF)
anonTrueNewModelDFManipulated2<-melt(lapply(anonTrueNewModelDF, unlist))
ggplot(anonTrueNewModelDFManipulated2, aes(x=value)) +
geom_density(aes(group=L1, colour=L1, fill=L1), alpha=0.3) +
labs(title="ORES damaging prediction is true", x="N=500") +
geom_vline(xintercept = c(0.8, 0.87, 0.94),  colour="green", linetype = "longdash")
anonFalseNewModel<-sapply(1:500, function(x) getStats(dfFalse[x,]))
View(anonFalseNewModel)
anonFalseNewModel<-t(anonFalseNewModel)
View(anonFalseNewModel)
save(anonFalseNewModel, file="anonFalseNewModel.rda")
getStats <- function(id) {
rdTrue <- fromJSON(paste0("https://ores.wmflabs.org/v2/scores/enwiki/damaging/", id, "/?feature.is_anon=true"))
rdFalse<-fromJSON(paste0("https://ores.wmflabs.org/v2/scores/enwiki/damaging/", id, "/?feature.is_anon=false"))
rdTruePredictionTrue<-rdTrue$scores$enwiki$damaging$scores[[1]]$probability$true
rdTruePredictionFalse<-rdFalse$scores$enwiki$damaging$scores[[1]]$probability$true
return(list(rdTruePredictionTrue, rdTruePredictionFalse))
}
anonFalseModel<-sapply(1:500, function(x) getStats(dfFalse[x,]))
save(anonFalseModel, file="anonFalseModel.rda")
anonFalseModelDF<-t(anonFalseModel)
colnames(anonFalseModelDF)<-c("anon_true", "anon_false")
anonFalseModelDF<-as.data.frame(anonFalseModelDF)
anonFalseModelDFManipulated<-melt(lapply(anonFalseModelDF, unlist))
ggplot(anonFalseModelDFManipulated, aes(x=value)) +
geom_density(aes(group=L1, colour=L1, fill=L1), alpha=0.3) +
labs(title="ORES damaging prediction is false", x="N=500") +
geom_vline(xintercept = c(0.8, 0.87, 0.94),  colour="green", linetype = "longdash")
anonTrueModel<-sapply(1:500, function(x) getStats(dfTrue[x,]))
save(anonTrueModel, file="anonTrueModel.rda")
anonTrueModelDF<-t(anonTrueModel)
colnames(anonTrueModelDF)<-c("anon_true", "anon_false")
anonTrueModelDF<-as.data.frame(anonTrueModelDF)
anonTrueModelDFManipulated<-melt(lapply(anonTrueModelDF, unlist))
ggplot(anonTrueModelDFManipulated, aes(x=value)) +
geom_density(aes(group=L1, colour=L1, fill=L1), alpha=0.3) +
labs(title="ORES damaging prediction is true", x="N=500") +
geom_vline(xintercept = c(0.8, 0.87, 0.94),  colour="green", linetype = "longdash")
anonTrueModelDF$difference<-as.numeric(as.character(anonTrueModelDF$anon_true))-as.numeric(as.character(anonTrueModelDF$anon_false))
anonTrueModelDF<-anonTrueModelDF[, c("anon_true", "anon_false", "difference")]
anonTrueModelDFManipulated2<-melt(lapply(anonTrueModelDF, unlist))
ggplot(anonTrueModelDFManipulated2, aes(x=value)) +
geom_density(aes(group=L1, colour=L1, fill=L1), alpha=0.3) +
labs(title="ORES damaging prediction is true", x="N=500") +
geom_vline(xintercept = c(0.8, 0.87, 0.94),  colour="green", linetype = "longdash")
load("anonFalseNewModel.rda")
